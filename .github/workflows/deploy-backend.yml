# .github/workflows/deploy-backend.yml
name: "Deploy Backend"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production

    steps:
      # 1) Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Cache npm to speed up installs
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      # 3) Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      # 4) Install & build
      - name: Install & Build
        run: |
          npm ci
          npm run build

      # 5) Sync dist/ + package files via rsync
      - name: Deploy dist via rsync
        uses: burnett01/rsync-deployments@7.0.2   # latest version :contentReference[oaicite:0]{index=0}
        with:
          switches: -avzr --delete
          path: |
            dist/
            package.json
            package-lock.json
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_SSH_KEY }}
          remote_path: /var/www/backend

      # 6) On server: install prod deps & restart via PM2
      - name: Install & restart on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            cd /var/www/backend
            npm ci --only=production
            pm2 delete backend || true
            pm2 start dist/src/main.js \
              --name backend \
              --env PORT=5000 \
              --node-args="--experimental-global-webcrypto"
